gtz %>%   arrange(-delta)
gtz %>%   arrange(-delta) %>% view
gtz %>% top_n(1)
OutInt <- gtz %>% top_n(1)
OutIn <- gtz %>% top_n(1)
aux <- tour[OutIn$row]
tour[Out] <- nontour[OutIn$col]
nontour[OutIn$col] <- aux
getTourFitness(tour-1, dm)
dm <- read_rds("inst/extdata/MDG.16.b.n500m50.rds")
tour <- tibble(N = 1:nrow(dm), Distance = rowSums(dm)) %>% top_n(50, Distance) %>% select(N) %>% unlist(use.names = FALSE)
nontour <- setdiff(1:500, tour)
getTourFitness(tour-1, dm)
S0 <- dm[c(tour, nontour), c(tour, nontour)]
G0 <- S0 %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S0[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G0[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G0[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1)
OutIn
getTourFitness(tour-1, dm) + 10633
getTourFitness(tour-1, dm)
#####
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
OutIn$row
tour[OutIn$row]
tour[OutIn$col]
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
gtz$delta
gtz$delta[1]
OutIn$delta
dm <- read_rds("inst/extdata/MDG.16.b.n500m50.rds")
tour <- tibble(N = 1:nrow(dm), Distance = rowSums(dm)) %>% top_n(50, Distance) %>% select(N) %>% unlist(use.names = FALSE)
nontour <- setdiff(1:500, tour)
getTourFitness(tour-1, dm)
getTourFitness(tour-1, dm)
getTourFitness(tour-1, dm) + OutIn$delta
S0 <- dm[c(tour, nontour), c(tour, nontour)]
G0 <- S0%*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
Out <- which.min(G0[1:50])
In <- which.max(G0[51:500])
aux <- tour[Out]
tour[Out] <- nontour[In]
nontour[In] <- aux
getTourFitness(tour-1, dm)
dm <- read_rds("inst/extdata/MDG.16.b.n500m50.rds")
tour <- tibble(N = 1:nrow(dm), Distance = rowSums(dm)) %>% top_n(50, Distance) %>% select(N) %>% unlist(use.names = FALSE)
nontour <- setdiff(1:500, tour)
getTourFitness(tour-1, dm)
#####
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
dm <- read_rds("inst/extdata/MDG.16.b.n500m50.rds")
tour <- tibble(N = 1:nrow(dm), Distance = rowSums(dm)) %>% top_n(50, Distance) %>% select(N) %>% unlist(use.names = FALSE)
nontour <- setdiff(1:500, tour)
getTourFitness(tour-1, dm)
#####
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
S <- dm[c(tour, nontour), c(tour, nontour)]
G <- S %*% matrix(c(rep(1,50), rep(0,450)), ncol = 1)
IM <- S[tour, nontour]
IM1 <- apply(IM, 2, function(x){-x - G[1:50]})
IM2 <- apply(IM1, 1, function(x){x + G[51:500]})
gtz <- as_tibble(which(IM2 >= 0, arr.ind = TRUE)) %>%
mutate(delta = apply(., 1, function(x) {IM2[x[1], x[2]]}))
OutIn <- gtz %>% top_n(1, delta)
OutIn
aux <- tour[OutIn$col]
tour[OutIn$col] <- nontour[OutIn$row]
nontour[OutIn$row] <- aux
getTourFitness(tour-1, dm)
7.754362e+05
(7.754362e+05 - getTourFitness(tour-1, dm))
(7.754362e+05 - getTourFitness(tour-1, dm))/7.754362e+05
